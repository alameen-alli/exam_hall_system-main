# import re

# from django.core import validators
# from django.utils.deconstruct import deconstructible
# from django.utils.translation import gettext_lazy as _


# @deconstructible
# class ASCIIUsernameValidator(validators.RegexValidator):
#     regex = r'^[\w.@+-]+\Z'
#     message = _(
#         'Enter a valid username. This value may contain only English letters, '
#         'numbers, and @/./+/-/_ characters.'
#     )
#     flags = re.ASCII


# @deconstructible
# class UnicodeUsernameValidator(validators.RegexValidator):
#     regex = r'^[\w.@+-]+\Z'
#     message = _(
#         'Enter a valid username. This value may contain only letters, '
#         'numbers, and @/./+/-/_ characters.'
#     )
#     flags = 0


import re
from django.core import validators
from django.utils.deconstruct import deconstructible
from django.utils.translation import gettext_lazy as _

@deconstructible
class ASCIIUsernameValidator(validators.RegexValidator):
    regex = r'^[\w.@+\-_/\\]+\Z'  # Updated regex to allow forward and backward slash
    message = _(
        'Enter a valid username. This value may contain only English letters, '
        'numbers, and @/./+/-/_ ALI characters.'
    )
    flags = re.ASCII

@deconstructible
class UnicodeUsernameValidator(validators.RegexValidator):
    regex = r'^[\w.@+\-_/\\]+\Z'  # Updated regex to allow forward and backward slash
    message = _(
        'Enter a valid username. This value may contain only letters, '
        'numbers, and @/./+/-/_ ALI . characters.'
    )
    flags = 0
